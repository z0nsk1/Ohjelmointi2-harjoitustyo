package Jasenrekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import Jasenrekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.05.06 20:01:42 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class JasenTest {



  // Generated by ComTest BEGIN
  /** test_rekisteroi */
  @Test
  public void test_rekisteroi() {    // Jasen: 12
    Jasen jasen1 = new Jasen(); 
    assertEquals("From: Jasen line: 15", 0, jasen1.getTunnusNro()); 
    jasen1.rekisteroi(); 
    Jasen jasen2 = new Jasen(); 
    jasen2.rekisteroi(); 
    int n1 = jasen1.getTunnusNro(); 
    int n2 = jasen2.getTunnusNro(); 
    assertEquals("From: Jasen line: 21", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** test_parse */
  @Test
  public void test_parse() {    // Jasen: 25
    Jasen jasen = new Jasen(); 
    jasen.parse("2|Erkki Esimerkki|2020|10|0123456789|0|0|100.0|3000|Esimerkki teksti"); 
    assertEquals("From: Jasen line: 29", 2, jasen.getTunnusNro()); 
    assertEquals("From: Jasen line: 30", true, jasen.toString().startsWith("2|Erkki Esimerkki|2020|"));  // on enemm�kin kuin 3 kentt��, siksi loppu |
    jasen.rekisteroi(); 
    int n = jasen.getTunnusNro();  // Otetaan merkkijonosta vain tunnusnumero
    jasen.rekisteroi();  // ja tarkistetaan ett� seuraavalla kertaa tulee yht� isompi
    assertEquals("From: Jasen line: 35", n+1, jasen.getTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** test_equals */
  @Test
  public void test_equals() {    // Jasen: 39
    Jasen jasen1 = new Jasen(); 
    jasen1.parse("1|Erkki Esimerkki|2020|1|0123456789|0|0|100.0|3000|Esimerkki teksti"); 
    Jasen jasen2 = new Jasen(); 
    jasen2.parse("1|Erkki Esimerkki|2020|1|0123456789|0|0|100.0|3000|Esimerkki teksti"); 
    Jasen jasen3 = new Jasen(); 
    jasen3.parse("2|Marko Esimerkki|2000|1|0120000789|23|7|100.0|2000|Tosi rehti"); 
    assertEquals("From: Jasen line: 48", true, jasen1.toString().equals(jasen2.toString())); 
    assertEquals("From: Jasen line: 49", true, jasen2.toString().equals(jasen1.toString())); 
    assertEquals("From: Jasen line: 50", false, jasen1.toString().equals(jasen3.toString())); 
    assertEquals("From: Jasen line: 51", false, jasen3.toString().equals(jasen2.toString())); 
    assertEquals("From: Jasen line: 52", false, jasen3.toString().equals(null)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testJasen56 */
  @Test
  public void testJasen56() {    // Jasen: 56
    Jasen jasen = new Jasen(); 
    jasen.parse("2|Marko Esimerkki|2000|1|0120000789|23|7|100.0|2000|Tosi rehti"); 
    assertEquals("From: Jasen line: 60", "76.7", jasen.getAktiivisuus()); 
  } // Generated by ComTest END
}